import pandas as pd
from math import *
from colorama import Fore
def en(value_n):
   e = value_n*log2(value_n)
   return(e)
base = [[0.14,0.06,0.05,0.08,0.13,0.04,0.01,0.09,0.15,0.02,0.11,0.12],
              [0.11,0.05,0.09,0.10,0.12,0.03,0.02,0.08,0.15,0.07,0.14,0.04],
              [0.13,0.07,0.05,0.06,0.15,0.04,0.11,0.02,0.12,0.16,0.08,0.01],
              [0.07,0.14,0.04,0.02,0.08,0.15,0.10,0.12,0.03,0.11,0.05,0.09],
              [0.16,0.08,0.01,0.11,0.02,0.12,0.06,0.15,0.04,0.13,0.07,0.05],
              [0.01,0.09,0.15,0.02,0.11,0.12,0.14,0.06,0.05,0.08,0.13,0.04],
              [0.02,0.08,0.15,0.07,0.14,0.04,0.13,0.07,0.05,0.06,0.15,0.04],
              [0.11,0.02,0.12,0.16,0.08,0.01,0.07,0.05,0.13,0.06,0.15,0.04],
              [0.06,0.05,0.14,0.13,0.04,0.08,0.15,0.01,0.09,0.12,0.02,0.11],
              [0.09,0.11,0.05,0.03,0.10,0.12,0.15,0.02,0.08,0.14,0.04,0.07],
              [0.05,0.13,0.07,0.15,0.04,0.06,0.02,0.12,0.11,0.04,0.07,0.14],
              [0.12,0.02,0.11,0.09,0.15,0.01,0.13,0.04,0.08,0.06,0.05,0.14],
              [0.14,0.04,0.07,0.15,0.02,0.08,0.03,0.10,0.12,0.09,0.11,0.05],
              [0.04,0.07,0.14,0.02,0.12,0.11,0.15,0.04,0.06,0.05,0.13,0.07],
              [0.05,0.07,0.13,0.04,0.15,0.06,0.12,0.02,0.11,0.01,0.08,0.16],
              [0.1,0.03,0.05,0.09,0.14,0.04,0.01,0.08,0.16,0.04,0.12,0.14],
              [0.12,0.07,0.08,0.11,0.16,0.01,0.04,0.06,0.13,0.09,0.1,0.03],
              [0.11,0.08,0.07,0.04,0.14,0.05,0.13,0.02,0.1,0.15,0.09,0.02],
              [0.03,0.12,0.14,0.02,0.08,0.15,0.1,0.11,0.03,0.12,0.05,0.05],
              [0.08,0.13,0.05,0.01,0.06,0.14,0.11,0.13,0.06,0.1,0.04,0.09],
              [0.15,0.09,0.02,0.13,0.02,0.1,0.08,0.16,0.01,0.12,0.06,0.06],
              [0.03,0.11,0.16,0.05,0.14,0.15,0.09,0.01,0.04,0.07,0.13,0.02],
              [0.06,0.01,0.12,0.09,0.16,0.02,0.11,0.03,0.08,0.05,0.15,0.12]]
j = pd.DataFrame(base)
print(Fore.LIGHTGREEN_EX+'Исходные данные:\n',j)
base2 = [0.14,0.06,0.05,0.08,0.13,0.04,0.01,0.09,0.15,0.02,0.11,0.12,0.11,0.05,0.09,0.10,0.12,0.03,0.02,0.08,0.15,0.07,0.14,0.0,0.13,0.07,0.05,0.06,0.15,
         0.04,0.11,0.02,0.12,0.16,0.08,0.0,0.07,0.14,0.04,0.02,0.08,0.15,0.10,0.12,0.03,0.11,0.05,0.04,0.16,0.08,0.01,0.11,0.02,0.12,0.06,0.15,0.04,0.13,
         0.07,0.01,0.01,0.09,0.15,0.02,0.11,0.12,0.14,0.06,0.05,0.08,0.13,0.09,0.02,0.08,0.15,0.07,0.14,0.04,0.13,0.07,0.05,0.06,0.15,0.05,0.11,0.02,0.12,
         0.16,0.08,0.01,0.07,0.05,0.13,0.06,0.15,0.04,0.06,0.05,0.14,0.13,0.04,0.08,0.15,0.01,0.09,0.12,0.02,0.14,0.09,0.11,0.05,0.03,0.10,0.12,0.15,0.02,
         0.08,0.14,0.04,0.04,0.05,0.13,0.07,0.15,0.04,0.06,0.02,0.12,0.11,0.04,0.07,0.11,0.12,0.02,0.11,0.09,0.15,0.01,0.13,0.04,0.08,0.06,0.05,0.17,0.14,
         0.04,0.07,0.15,0.02,0.08,0.03,0.10,0.12,0.09,0.11,0.04,0.04,0.07,0.14,0.02,0.12,0.11,0.15,0.04,0.06,0.05,0.13,0.04,0.05,0.07,0.13,0.04,0.15,0.06,
         0.12,0.02,0.11,0.01,0.08,0.15,0.1,0.03,0.05,0.09,0.14,0.04,0.01,0.08,0.16,0.04,0.12,0.14,0.12,0.07,0.08,0.11,0.16,0.01,0.04,0.06,0.13,0.09,0.1,0.03,
         0.11,0.08,0.07,0.04,0.14,0.05,0.13,0.02,0.1,0.15,0.09,0.02,0.03,0.12,0.14,0.02,0.08,0.15,0.1,0.11,0.03,0.12,0.05,0.05,0.08,0.13,0.05,0.01,0.06,0.14,
         0.11,0.13,0.06,0.1,0.04,0.09,0.15,0.09,0.02,0.13,0.02,0.1,0.08,0.16,0.01,0.12,0.06,0.06,0.03,0.11,0.16,0.05,0.14,0.15,0.09,0.01,0.04,0.07,0.13,0.02,
         0.06,0.01,0.12,0.09,0.16,0.02,0.11,0.03,0.08,0.05,0.15,0.12]
myset = set(base2)
jj = sorted(myset, reverse=True)
print(Fore.LIGHTBLACK_EX+'',myset,'\n',jj)
jj0,jj1,jj2,jj3,jj4,jj5,jj6,jj7,jj8,jj9,jj10,jj11,jj12=jj[0],jj[1],jj[2],jj[3],jj[4],jj[5],jj[6],jj[7],jj[8],jj[9],jj[10],jj[11],jj[12]
print(Fore.LIGHTMAGENTA_EX+'Задание 1\n\n'+Fore.LIGHTYELLOW_EX+'''Код Шеннона-Фано для первичного алфавита
Символ | Вероятность | Код
S1       {0}          1000
S2       {1}          1001
S3       {2}          1010
S4       {3}          1011
S5       {4}          1100
S6       {5}          1101
S7       {6}          111*
S8       {7}           011*
S9       {8}          010*
S10      {9}          0011
S11      {10}          0010
S12      {11}          0001
S13      {12}          0000'''.format(jj0,jj1,jj2,jj3,jj4,jj5,jj6,jj7,jj8,jj9,jj10,jj11,jj12))
print(Fore.LIGHTMAGENTA_EX+'Задание 2\n\n'+Fore.LIGHTYELLOW_EX+'''
              0_________________1
              |                 |
        0_____|__1           0__|______________1
       |         |           |                 |
    0__|___1   0_|__1     0__|____1        0___|_____1
   |       |   |    |     |       |        |         |
   |       |  S9    S8    |       |        |         |
 0_|_1   0_|_1         0__|_1   0_|_1    0_|_1       |
 |   |   |   |         |    |   |   |    |   |       |
 |   |   |   |         |    |   |   |    |   |       |
S13 S12  S11 S10      S1    S2  S3  S4   S5  S6      S7
''')
HS = round((-(en(jj[0])+en(jj[1])+en(jj[2])+en(jj[3])+en(jj[4])+en(jj[5])+en(jj[6])+en(jj[7])+en(jj[8])+en(jj[9])+en(jj[10])+en(jj[11])+en(jj[12]))),2)
L = round((HS * log2(1/4)), 2)
Keff = round((HS/L), 2)
print(Fore.LIGHTMAGENTA_EX+'Задание 3\n\n'+Fore.LIGHTBLACK_EX+'''Эффективность кода Шеннона-Фано можно определить по формуле:
K(eff) = H(S) / L, где H(S) - энтропия исходного алфавита, а L - средняя длина кодового слова.
Энтропия исходного алфавита рассчитывается по формуле:\nH(S) = -Σ p(i) * log2(p(i)), где p(i) - вероятность появления символа i.

H(S) = - (0,17*log2(0,17) + 0,16*log2(0,16) + ... + 0,05*log2(0,05)) = {0} бит

Средняя длина кодового слова рассчитывается как сумма произведений длины кодового слова на вероятность его появления для
каждого символа:\n\nL = Σ l(i) * p(i), где l(i) - длина кодового слова для символа i.

L = 1*0,17 + 2*0,16 + 2*0,15 + 3*0,14 + 3*0,13 + 3*0,12 + 4*0,11 + 5*0,1 + 6*0,09 + 8*0,08 + 8*0,07 + 8*0,06 + 8*0,05 = {1} бит

Таким образом, эффективность кода Шеннона-Фано равна:\n\nK(eff) = H(S) / L = {2} / {3} = {4}
Ответ: эффективность кода Шеннона-Фано равна {5}.'''.format(HS, L, HS, L, Keff, Keff))